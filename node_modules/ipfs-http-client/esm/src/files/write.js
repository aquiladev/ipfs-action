import { modeToString } from '../lib/mode-to-string.js';
import { parseMtime } from '../lib/parse-mtime.js';
import { configure } from '../lib/configure.js';
import { multipartRequest } from 'ipfs-core-utils/multipart-request';
import { toUrlSearchParams } from '../lib/to-url-search-params.js';
import { abortSignal } from '../lib/abort-signal.js';
import { AbortController } from 'native-abort-controller';
export const createWrite = configure(api => {
  async function write(path, input, options = {}) {
    const controller = new AbortController();
    const signal = abortSignal(controller.signal, options.signal);
    const res = await api.post('files/write', {
      signal,
      searchParams: toUrlSearchParams({
        arg: path,
        streamChannels: true,
        count: options.length,
        ...options
      }),
      ...await multipartRequest([{
          content: input,
          path: 'arg',
          mode: modeToString(options.mode),
          mtime: parseMtime(options.mtime)
        }], controller, options.headers)
    });
    await res.text();
  }
  return write;
});